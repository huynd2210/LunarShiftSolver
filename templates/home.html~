<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Lunar Shift Solver</title>
    <style>
      body { font-family: Arial, sans-serif; margin: 2em; }
      table { border-collapse: collapse; margin-bottom: 1em; }
      td {
        width: 40px;
        height: 40px;
        border: 1px solid #333;
        cursor: pointer;
      }
      input { padding: 5px; margin: 5px 0; }
    </style>
  </head>
  <body>
    <h1>Lunar Shift Solver</h1>
    <form method="post" action="{{ url_for('solve') }}" onsubmit="prepareGridData()">
      <div>
        <label for="rows">Number of rows:</label>
        <input type="number" id="rows" name="rows" value="5" min="1" required>
      </div>
      <div>
        <label for="cols">Number of columns:</label>
        <input type="number" id="cols" name="cols" value="4" min="1" required>
      </div>
      <div>
        <button type="button" onclick="generateGrid()">Generate Grid</button>
      </div>
      <br>
      <div>
        <p>Click on cells to toggle color (0 = cyan, 1 = purple):</p>
        <div id="gridContainer">
          <!-- The grid table will be inserted here -->
        </div>
      </div>
      <br>
      <div>
        <label for="moves">Number of moves allowed [default: 15]:</label><br>
        <input type="number" name="moves" id="moves" placeholder="15">
      </div>
      <br>
      <!-- Hidden input to store grid data -->
      <input type="hidden" name="grid" id="grid">
      <button type="submit">Solve</button>
    </form>

    <script>
      // Generate the grid based on the number of rows and columns given by the user.
      function generateGrid() {
        var rows = document.getElementById("rows").value;
        var cols = document.getElementById("cols").value;
        var gridContainer = document.getElementById("gridContainer");
        var table = document.createElement("table");
        table.id = "gridTable";

        for (var i = 0; i < rows; i++) {
          var tr = document.createElement("tr");
          for (var j = 0; j < cols; j++) {
            var td = document.createElement("td");
            td.setAttribute("data-value", "0");
            td.style.backgroundColor = "cyan";
            td.addEventListener("click", function() {
              var currentValue = this.getAttribute("data-value");
              var newValue = currentValue === "0" ? "1" : "0";
              this.setAttribute("data-value", newValue);
              this.style.backgroundColor = newValue === "0" ? "cyan" : "purple";
            });
            tr.appendChild(td);
          }
          table.appendChild(tr);
        }
        gridContainer.innerHTML = "";
        gridContainer.appendChild(table);
      }

      // Generate an initial grid when the page loads.
      window.onload = generateGrid;

      // Assemble the grid data into a string for submission.
      function prepareGridData() {
        var table = document.getElementById("gridTable");
        var gridData = "";
        for (var i = 0, row; row = table.rows[i]; i++) {
          var rowData = [];
          for (var j = 0, cell; cell = row.cells[j]; j++) {
            rowData.push(cell.getAttribute("data-value"));
          }
          gridData += rowData.join(" ") + "\n";
        }
        document.getElementById("grid").value = gridData.trim();
      }
    </script>
  </body>
</html>
